---
- name: create Minecraft group
  group:
    name: "{{ minecraft_server_group }}"
    system: yes
- name: create Minecraft user
  user:
    name: "{{ minecraft_server_user }}"
    group: "{{ minecraft_server_group }}"
    home: "{{ minecraft_server_home }}"
    system: yes
- name: set minecraft_version_manifest variable
  set_fact:
    minecraft_version_manifest: "{{ lookup('url', 'https://launchermeta.mojang.com/mc/game/version_manifest.json') }}"
- name: set minecraft_server_version variable
  set_fact:
    minecraft_server_version: "{{ minecraft_version_manifest.latest.release }}"
  when: minecraft_server_version == 'latest'
- name: set minecraft_version_info variable
  set_fact:
    minecraft_version_info: "{{ lookup('url', minecraft_info_url) }}"
  vars:
    minecraft_info_url: "{{ (minecraft_version_manifest.versions | items2dict(key_name='id', value_name='url'))[minecraft_server_version] }}"
- name: download Minecraft server
  get_url:
    url: "{{ minecraft_version_info.downloads.server.url }}"
    dest: "{{ minecraft_server_home }}/minecraft_server.{{ minecraft_server_version }}.jar"
    checksum: "sha1:{{ minecraft_version_info.downloads.server.sha1 }}"
    owner: "{{ minecraft_server_user }}"
    group: "{{ minecraft_server_group }}"
- name: download Minecraft server
  file:
    path: "{{ minecraft_server_home }}/minecraft_server.jar"
    src: "{{ minecraft_server_home }}/minecraft_server.{{ minecraft_server_version }}.jar"
    owner: "{{ minecraft_server_user }}"
    group: "{{ minecraft_server_group }}"
    state: link
  notify: restart minecraft-server
- name: create systemd unit file
  template:
    src: minecraft-server.service.j2
    dest: /lib/systemd/system/minecraft-server.service
  notify: restart minecraft-server
- name: agree to EULA
  copy:
    src: eula.txt
    dest: "{{ minecraft_server_home }}/eula.txt"
    owner: "{{ minecraft_server_user }}"
    group: "{{ minecraft_server_group }}"
    mode: 0644
- name: create property file
  template:
    src: server.properties.j2
    dest: "{{ minecraft_server_home }}/server.properties"
    owner: "{{ minecraft_server_user }}"
    group: "{{ minecraft_server_group }}"
    mode: 0644
  notify: restart minecraft-server
- name: create white-list.txt
  template:
    src: white-list.txt.j2
    dest: "{{ minecraft_server_home }}/white-list.txt"
    owner: "{{ minecraft_server_user }}"
    group: "{{ minecraft_server_group }}"
    mode: 0644
  notify: restart minecraft-server
  when: minecraft_server_cfg.white_list
- name: create ops.txt
  template:
    src: ops.txt.j2
    dest: "{{ minecraft_server_home }}/ops.txt"
    owner: "{{ minecraft_server_user }}"
    group: "{{ minecraft_server_group }}"
    mode: 0644
  notify: restart minecraft-server
- name: minecraft-server enabled on system startup
  systemd:
    name: minecraft-server
    daemon_reload: yes
    state: started
    enabled: yes
- name: install ufw
  apt:
    name: ufw
- name: allow mincloft server port
  ufw:
    rule: allow
    port: "{{ minecraft_server_cfg.server_port|default(25565) }}"
    proto: tcp
